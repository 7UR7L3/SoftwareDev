running ./pi
	seg fault
w/ gdb
	issue is occurring
		line 89 of pi.c
via file
	problem
		pt is NULL; fixed via allocating memory
to break at zeroDist
	break zeroDist
to print x and y
	print *other_pt
valgrind
	memory leaked
		definitely lost: 16,000,016 bytes in 1,000,001 blocks
	where leaked
		lines 41, 65

		==28656== 16 bytes in 1 blocks are definitely lost in loss record 1 of 2
		==28656==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
		==28656==    by 0x400A0F: main (pi.c:65)
		==28656== 
		==28656== 16,000,000 bytes in 1,000,000 blocks are definitely lost in loss record 2 of 2
		==28656==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
		==28656==    by 0x40097F: zeroDist (pi.c:41)
		==28656==    by 0x400B73: main (pi.c:98)
	problem
		memory not freed
	fix
		added frees
/usr/bin/time
	/usr/bin/time -v ./pi 13800000
		pi = 3.140968
		Command being timed: "./pi 13800000"
		User time (seconds): 1.00
		System time (seconds): 0.00
		Percent of CPU this job got: 99%
		Elapsed (wall clock) time (h:mm:ss or m:ss): 0:01.00
		Average shared text size (kbytes): 0
		Average unshared data size (kbytes): 0
		Average stack size (kbytes): 0
		Average total size (kbytes): 0
		Maximum resident set size (kbytes): 1944
		Average resident set size (kbytes): 0
		Major (requiring I/O) page faults: 0
		Minor (reclaiming a frame) page faults: 73
		Voluntary context switches: 1
		Involuntary context switches: 17
		Swaps: 0
		File system inputs: 0
		File system outputs: 0
		Socket messages sent: 0
		Socket messages received: 0
		Signals delivered: 0
		Page size (bytes): 4096
		Exit status: 0
kcachegrind
	top 5 places the program spends most time
		main
		zeroDist
		dist
		malloc
		free
optimization
	made zeroDist just directly return the distance.
	now it's .56s